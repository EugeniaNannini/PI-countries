{"version":3,"sources":["components/Landingpage/Landingpage.jsx","actions/index.js","components/Card/Card.jsx","components/Paginate/Paginate.jsx","components/Home/Home.jsx","App.js","reportWebVitals.js","reducers/index.js","store/index.js","index.js"],"names":["LandingPage","to","getActivities","dispatch","a","axios","get","data","console","log","type","payload","Card","img","name","continent","src","alt","width","height","Paginate","countriesPerPage","allcountries","paginate","pageNumber","i","Math","ceil","push","map","number","onClick","Home","useDispatch","useSelector","state","countries","activities","useState","currentPage","setCurrentPage","indexOfLastCountry","indexOfFirstCountry","currentCountries","slice","useEffect","e","preventDefault","HandleClick","value","length","el","id","imagen","App","className","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialSate","rootReducer","action","activites","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2bd054ea.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function LandingPage(){\r\n    return(\r\n        <div>\r\n            <h1>Welcome</h1>\r\n            <Link to='/home'>\r\n                <button> Start </button>\r\n            </Link>\r\n        </div>\r\n\r\n    )\r\n}","import axios from 'axios';\r\n\r\n//acciones p/home :get countries, get activities\r\n//filtros: por continente, por tipo de actividad turistica\r\n//ordenar asc y dec por orden alfabetico y ordenar asc y desc por cantidad de population\r\n//input de busq para buscar por name (para componente search bar)\r\n//detalle/detail para componente detail ---> GET DETAIL\r\n//create/post activity para componente createActivity\r\n\r\nexport function  getCountries() {\r\n    return async function (dispatch)  {\r\n        const data = await axios.get(`http://localhost:3001/countries`);\r\n        console.log('INFO QUE ME TRAE LA API', data)\r\n        dispatch({\r\n            type: 'GET COUNTRIES',\r\n            payload: data\r\n        });\r\n    };\r\n};\r\nexport function getActivities(){\r\n    return async function(dispatch){\r\n        const data = await axios.get(`http://localhost:3001/activities`);\r\n        console.log('TRAIGO ACTIVITIES' ,data)\r\n        dispatch({\r\n            type: 'GET_ACTIVITIES',\r\n            payload: data\r\n        });\r\n    };\r\n};   \r\n    \r\n\r\n \r\n\r\n","import React from \"react\";\r\n\r\nexport default function Card({img, name, continent}){\r\n    return(\r\n        <div>\r\n            <h3>{name}</h3>\r\n            <img src={img} alt='img not found' width='250px' height='175px'/>\r\n            <h3>{continent}</h3>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\n\r\nexport default function Paginate({countriesPerPage, allcountries, paginate}){\r\n    const pageNumber = []\r\n    for(let i=1; i <=Math.ceil(allcountries/countriesPerPage); i++){\r\n        pageNumber.push(i)\r\n    }\r\n    return (\r\n        <nav>\r\n            <ul>\r\n                {pageNumber && pageNumber.map(number =>(\r\n                    <button key={number}onClick={()=> paginate(number)}>{number}</button>\r\n\r\n                ))}\r\n            \r\n                    \r\n            \r\n            </ul>\r\n        </nav>\r\n    )\r\n}","import React from \"react\";\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport { useEffect, useState} from \"react\";\r\nimport { getCountries, getActivities } from \"../../actions\";\r\nimport { Link } from 'react-router-dom'\r\nimport Card from \"../Card/Card\";\r\nimport Paginate from '../Paginate/Paginate';\r\n\r\n\r\n\r\n\r\nexport default function Home(){\r\n    const dispatch = useDispatch()\r\n    const allcountries = useSelector((state)=> state.countries)\r\n    const activities = useSelector((state) => state.activities)\r\n    // paginado ---\r\n\r\n    const[currentPage,setCurrentPage] = useState(1)\r\n    let countriesPerPage = 0;\r\n    if(currentPage === 1) {\r\n      countriesPerPage = 9;\r\n    }\r\n    if(currentPage >= 2){\r\n      countriesPerPage =10\r\n    }\r\n    const indexOfLastCountry = currentPage * countriesPerPage\r\n    const indexOfFirstCountry = indexOfLastCountry - countriesPerPage\r\n    const currentCountries = allcountries.slice(indexOfFirstCountry,indexOfLastCountry)\r\n    const paginate = (pageNumber) =>{\r\n        setCurrentPage(pageNumber)\r\n    }\r\n\r\n\r\n\r\n\r\n    useEffect(()=>{\r\n        dispatch(getCountries());\r\n    },[dispatch])\r\n\r\n    useEffect(()=>{\r\n        dispatch(getActivities());\r\n    },[dispatch])\r\n\r\n    function HandleClick(e){\r\n        e.preventDefault()\r\n        dispatch(getActivities())\r\n    }\r\n    \r\n\r\n\r\n    return(\r\n        <div>\r\n            <button onClick={e=>{HandleClick(e)}}>Refresh Countries </button>\r\n            <div>\r\n                {/* filtro por continente */}\r\n                <select> \r\n                    <option value='All'> All continents</option>\r\n                    <option value='South America'>South America</option>\r\n                    <option value='North America'>North America</option>\r\n                    <option value='Europe'>Europe</option>\r\n\t\t\t\t\t<option value='Africa'>Africa</option>\r\n\t\t\t\t\t<option value='Asia'>Asia</option>\r\n\t\t\t\t\t<option value='Oceania'>Oceania</option>\r\n\t\t\t\t\t<option value='Antarctica'>Antarctica</option>\r\n                </select>\r\n                {/* filtro por actividad turística  */}\r\n                <select>\r\n                    <option value='Nothing'>Select activities</option>\r\n                    <option value='All'>All</option>\r\n                    {activities.map((i)=>(\r\n                        <option value={i.name}>{i.name}</option>\r\n                    ))}\r\n                </select>\r\n                {/* filtro por orden alfabetico  */}\r\n                <select>\r\n                    <option value='asc'>A-Z</option>\r\n                    <option value='desc'>Z-A</option>\r\n                </select>\r\n                {/* filtro por cantidad de población  */}\r\n                <select>\r\n                    <option value='asc'>More populated</option>\r\n                    <option value='desc'>Less populated</option>\r\n                </select>\r\n               \r\n                <Paginate\r\n                countriesPerPage = {countriesPerPage}\r\n                allcountries={allcountries.length}\r\n                paginate={paginate}>\r\n                </Paginate>\r\n                \r\n               \r\n                {currentCountries?.map(el=>{\r\n                    return(\r\n                        <div key={el.id}>\r\n                            <Link to={'/home' + el.id}>\r\n                            <Card name={el.name} continent={el.continent} imagen={el.img}/>\r\n                            </Link>\r\n                        </div>\r\n                    )\r\n                })\r\n\r\n                }\r\n            </div>\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\n","import './App.css';\nimport { BrowserRouter, Route, Routes} from 'react-router-dom';\nimport React from 'react';\n//importo los componentes\nimport Landingpage from './components/Landingpage/Landingpage';\nimport Home from './components/Home/Home';\nfunction App() {\n  return (\n    <BrowserRouter>\n    <div className=\"App\">\n      <h1> Countries </h1>\n      <Routes>\n      <Route path='/' element={<Landingpage/>}/>\n      <Route path='/home' element={<Home/>}/>  \n      </Routes>\n    </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const initialSate = {\r\n    countries : [],\r\n    allcountries: [],\r\n    activities:[]\r\n}\r\nfunction rootReducer(state= initialSate, action){\r\n    switch(action.type){\r\n        case 'GET COUNTRIES':\r\n            return{\r\n                ...state,\r\n                countries: action.payload,\r\n                allcountries: action.payload\r\n            }\r\n        case 'GET_ACTIVITIES':\r\n        return{\r\n            ...state,\r\n            activites: action.payload\r\n        }\r\n        default:\r\n\t\t\treturn state;\r\n\r\n\r\n\r\n    }\r\n    \r\n\r\n}\r\nexport default rootReducer;","import {createStore, applyMiddleware} from \"redux\";\r\nimport {composeWithDevTools} from \"redux-devtools-extension\";\r\nimport thunk from \"redux-thunk\";\r\n//Redux-thunk te permite escribir creadores de acciones que retornan una función en vez de un objeto de acción típico. \r\n//Entonces, el thunk puede ser usado para retrasar el envío de una acción hasta que se cumpla una línea de código asíncrona.\r\nimport rootReducer from \"../reducers\";\r\n\r\nexport const store = createStore(rootReducer,composeWithDevTools(applyMiddleware(thunk)))\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport { store } from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n  </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}